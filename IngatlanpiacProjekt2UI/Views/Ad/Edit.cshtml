@model RealEstateProjectUI.Models.AdModels

@{
    ViewBag.Title = "Módosítás";
}

<h2>Módosítás</h2>

@*using enctype due to the image data in the database*@
@using (Html.BeginForm("Edit", "Ad", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    //using form-groups to adjust the form elements together
    <div class="form-horizontal">
        <h4>Módosíts az alábbi részleteken:</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @placeholder = "pl.: Pesti napfényes lakás SOS eladó" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.District, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.District, new { htmlAttributes = new { @class = "form-control", @placeholder = "pl.: VII" } })
                @Html.ValidationMessageFor(model => model.District, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Street, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control", @placeholder = "pl.: Arany János utca" } })
                @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control height-100", @placeholder = "pl.: Sürgősen eladom a lakásomat." } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Size, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Size, new { htmlAttributes = new { @class = "form-control", @placeholder = "pl.: 50" } })
                @Html.ValidationMessageFor(model => model.Size, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", @placeholder = "pl.: 7" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataInHttpPostedFileBase, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="@nameof(Model.DataInHttpPostedFileBase)" id="@nameof(Model.DataInHttpPostedFileBase)" class="form-control" />
                @Html.ValidationMessageFor(model => model.DataInHttpPostedFileBase, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-1 col-md-10">
                @*redirects to the previous details view without submitting any changes*@
                <a href='@Url.Action("Details", new { id = Model.Id })' class="a-thumbnail">
                    <input type="button" value="Mégsem &raquo;" class="btn btn-default" />
                </a>
                @*sumbits the form with changes and calls the edit POST action on the controller*@
                <input type="submit" value="Mentés &raquo;" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@*redirects back to the home index view*@
<div>
    @Html.ActionLink("Vissza a kezdőlapra", "Index", "Home")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
